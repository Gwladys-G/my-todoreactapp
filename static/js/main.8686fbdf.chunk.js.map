{"version":3,"sources":["NewTask.jsx","Settings.jsx","BoredAPI.jsx","TaskList.jsx","Display.jsx","App.js","index.js"],"names":["NewTask","react_default","a","createElement","Form","onSubmit","this","props","handleSubmit","Group","className","controlId","Stack","direction","gap","Control","type","placeholder","name","value","newTask","title","activity","onChange","handleChange","Fragment","Button","variant","as","rows","description","Component","Settings","handleSelect","eventKey","alert","concat","Nav","activeKey","onSelect","Item","Link","onClick","saveTasks","clearAll","clearAllDoneTasks","CustomToggle","_ref","children","decoratedOnClick","useAccordionButton","size","id","BoredAPI","Accordion","defaultActiveKey","Card","Header","Collapse","Body","InputGroup","readOnly","AddActivity","index_es","icon","faRotate","GetActivity","TaskList","_this","allTasks","map","task","style","backgroundColor","completed","faTrash","handleDelete","textAlign","fontSize","fontStyle","textDecoration","createdAt","Title","Text","markAsCompleted","Display","TaskList_TaskList","BoredAPI_BoredAPI","LOCAL_STORAGE_KEY","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","localStorage","setItem","JSON","stringify","state","window","removeItem","setState","prevState","e","_objectSpread2","objectSpread","defineProperty","target","Date","now","toDateString","preventDefault","toConsumableArray","updatedTasks","filter","remainingTasks","length","fetch","then","res","json","result","isLoaded","idea","error","document","getElementById","click","storedTasks","parse","getItem","Settings_Settings","NewTask_NewTask","Display_Display","ReactDOM","createRoot","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.8686fbdf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Stack from 'react-bootstrap/Stack';\n\nexport default class NewTask extends Component{\n  render () {\n    return (\n      <Form onSubmit={this.props.handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n          <Stack direction=\"horizontal\" gap={3}>\n            <Form.Control type=\"input\" placeholder=\"New Task title\" name=\"title\"\n              value={this.props.newTask.title || this.props.activity || \"\"}\n              onChange={this.props.handleChange}/>\n            {!this.props.newTask.title? null : (\n              <>\n                <Button variant=\"primary\" type=\"submit\" className=\"mb-1 btn-sm \">\n                  Add Task\n                </Button>\n              </>\n            )}\n          </Stack>\n            {!this.props.newTask.title? null : (\n          <>\n            <Form.Control as=\"textarea\" rows={3} name=\"description\"\n              placeholder=\"Add details\"\n              value={this.props.newTask.description || \"\"}\n              onChange={this.props.handleChange}/>\n          </>\n          )}\n      </Form.Group>\n    </Form>\n  )}\n}\n","import React, { Component } from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\n\n\n  export default class Settings extends Component {\n\n    handleSelect = (eventKey) => alert(`${eventKey}`)\n\n    render (){\n      return (\n        <div>\n          <Nav variant=\"pills\" activeKey=\"1\" onSelect={this.handleSelect} className= \"mt-3 mb-2\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"Progress has been Saved !\" onClick={this.props.saveTasks}>\n                <Button variant=\"outline-success\">Save Progress</Button>{' '}\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link className=\"btn btn-outline-secondary\" eventKey=\"All tasks will been cleared\" onClick={this.props.clearAll}>\n                <Button variant=\"outline-danger\">Clear All</Button>{' '}\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"All done tasks are going to be cleared\" onClick={this.props.clearAllDoneTasks}>\n                <Button variant=\"outline-warning\">Clear done tasks</Button>{' '}\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </div>\n      )\n    }\n  }\n","import React, { Component }  from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faRotate} from '@fortawesome/free-solid-svg-icons'\n\n\nfunction CustomToggle({ children, eventKey }) {\n  const decoratedOnClick = useAccordionButton(eventKey);\n\n  return (\n    <Button\n      variant=\"dark\" size=\"m\"\n      type=\"button\"\n      id=\"accordion\"\n      onClick={decoratedOnClick}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default class BoredAPI extends Component {\n\n  render(){\n    return (\n      <Accordion defaultActiveKey=\"1\"  className=\"mt-3\" >\n        <Card>\n          <Card.Header className=\"d-grid gap-2\">\n            <CustomToggle eventKey=\"0\">I'm Bored!</CustomToggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n            {!this.props.activity? null : (\n                <InputGroup className=\"mb-3\">\n                  <Form.Control\n                    className=\"hide\" id=\"APIform\"\n                    as=\"textarea\"\n                    value={this.props.activity}\n                    title={this.props.activity}\n                    readOnly={true}\n                  />\n                  <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={this.props.AddActivity} eventKey=\"1\"> Let's add this</Button>\n                </InputGroup>\n                )}\n                <FontAwesomeIcon icon={faRotate} onClick={this.props.GetActivity}></FontAwesomeIcon>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\n\nexport default class TaskList extends Component {\n  render () {\n    return(\n      <div className=\"taskslist\">\n        {this.props.allTasks.map((task) => (\n              <Card className=\"mt-3\">\n                <Card.Header className=\"cardheader\" style={{backgroundColor: task.completed ? 'darkgray' : 'white'}}>\n                  <FontAwesomeIcon className=\"trash\"icon={faTrash} onClick={()=>this.props.handleDelete(task.id)}></FontAwesomeIcon>\n                  <p className=\"mb-0\" style={{textAlign: 'end', fontSize: 'smaller',fontStyle: 'italic',textDecoration: task.completed ? 'line-through' : 'none'}}>{task.createdAt}</p>\n                </Card.Header>\n                <Card.Body style={{textDecoration: task.completed ? 'line-through' : 'none', backgroundColor: task.completed ? 'grey' : 'white'}}>\n                  <Card.Title>{task.title}</Card.Title>\n                  <Card.Text>\n                    {!task.description? null : task.description}\n                  </Card.Text>\n                </Card.Body>\n                {!task.completed? <Button className=\"btn btn-success m-3\" variant=\"primary\" onClick={()=> this.props.markAsCompleted(task.id)}> Mark as Completed</Button> : null}\n              </Card>\n        ))}\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\n\nimport BoredAPI from \"./BoredAPI\"\nimport TaskList from \"./TaskList\"\n\n\nexport default class Display extends Component {\n  render(){\n    return (\n      <div className=\"container\">\n        <TaskList\n          allTasks={this.props.allTasks}\n          markAsCompleted={this.props.markAsCompleted}\n          handleDelete={this.props.handleDelete}\n        />\n          <BoredAPI\n            GetActivity={this.props.GetActivity}\n            activity={this.props.activity}\n            AddActivity={this.props.AddActivity}\n            handleChange={this.props.handleChange}\n          />\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport NewTask from \"./NewTask\"\nimport Settings from \"./Settings\";\nimport Display from \"./Display\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst LOCAL_STORAGE_KEY= 'todoApp.todos'\n\nexport default class App extends Component {\n\n  constructor(props){\n    super(props);\n    const storedTasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    this.state = {\n      newTask: {},\n      allTasks: storedTasks? storedTasks : [],\n      error: null,\n      isLoaded: false,\n      idea: \"\",\n    };\n  }\n\n  saveTasks = () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(this.state.allTasks))\n  }\n\n  clearAll = () => {\n    window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n    this.setState((prevState) => ({\n      allTasks: [],\n      newTask: {}\n    }));\n  }\n\n  handleChange = (e) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      newTask: {\n        ...prevState.newTask,\n        [e.target.name]: e.target.value,\n        id: Date.now(),\n        createdAt: new Date().toDateString(),\n        completed: false\n      }\n    }));\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (!this.state.newTask.title) return;\n    this.setState((prevState) => ({\n      allTasks: [...prevState.allTasks, prevState.newTask],\n      newTask: {}\n    }));\n  }\n\n  markAsCompleted = (id) => {\n    const updatedTasks = this.state.allTasks.map(task => {\n      if (task.id === id){\n        return {...task, completed:true};\n      }\n      return task;\n    });\n    this.setState((prevState) => ({\n      ...prevState,\n      allTasks: updatedTasks\n    }))\n  }\n\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      allTasks: prevState.allTasks.filter((task) => task.id !== id)\n    }))\n  }\n\n  remainingTasks = () =>{\n    return this.state.allTasks.filter(task => !task.completed).length\n  }\n\n  clearAllDoneTasks = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      allTasks: prevState.allTasks.filter((task) => !task.completed)\n    }))\n  }\n\n  GetActivity = () => {\n    fetch(\"http://www.boredapi.com/api/activity/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState((prevState) => ({\n            ...prevState,\n            isLoaded: true,\n            idea: result.activity\n          }));\n        },\n        (error) => {\n          this.setState((prevState) => ({\n            ...prevState,\n            isLoaded: true,\n            error\n          }));\n        }\n      )\n  }\n\n  AddActivity = (e) => {\n    e.preventDefault()\n    this.setState((prevState) => ({\n      ...prevState,\n      newTask: {\n        title: this.state.idea,\n        id: Date.now(),\n        createdAt: new Date().toDateString(),\n        completed: false\n      },\n      idea:\"\"\n    })\n    )\n  document.getElementById(\"accordion\").click()\n}\n\n\n\n  render(){\n    return (\n      <div>\n        <div className=\"sticky-top bg-light rounded px-5 py-3\">\n          <h1 className=\"m-2\">Tasks</h1>\n          <h6 className=\"justify-content-end\">{this.remainingTasks()} {this.remainingTasks()>1? \"tasks are\" : \"task\"} left</h6>\n          <Settings\n            saveTasks={this.saveTasks}\n            clearAll={this.clearAll}\n            remainingTasks={this.remainingTasks}\n            clearAllDoneTasks={this.clearAllDoneTasks}\n          />\n          <NewTask\n            newTask={this.state.newTask}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n        <Display\n          allTasks={this.state.allTasks}\n          markAsCompleted={this.markAsCompleted}\n          handleDelete={this.handleDelete}\n          GetActivity={this.GetActivity}\n          activity={this.state.idea}\n          AddActivity={this.AddActivity}\n          handleChange={this.handleChange}/>\n      </div>\n    )\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}